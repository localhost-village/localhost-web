---
interface Props {
  title: string;
  description: string;
  imageUrl: string;
  imageAlt: string;
  button?: {
    text: string;
    link: string;
  };
  sponsor?: {
    logoUrl: string;
    logoDark?: string;
    logoAlt: string;
    link: string;
    size?: 'normal' | 'large';
  };
}

const { title, description, imageUrl, imageAlt, button, sponsor } = Astro.props;
---

<div class="activity-card">
  <div class="image-container">
    <img src={imageUrl} alt={imageAlt} />
  </div>
  <div class="content">
    <div class="text-content">
      <h3>{title}</h3>
      <p>{description}</p>
    </div>

    <div class="actions-wrapper">
      {button && (
        <a
          href={button.link}
          class={`button 'button-primary'}`}
          target="_blank"
          rel="noopener"
        >
          {button.text}
        </a>
      )}

      {sponsor && (
        <div class="sponsor-wrapper">
          <a
            href={sponsor.link}
            target="_blank"
            rel="noopener"
            class={`sponsor-logo-container ${sponsor.size === 'large' ? 'large' : ''}`}
          >
            <img src={sponsor.logoUrl} alt={sponsor.logoAlt} class="sponsor-logo logo-light" />
            {sponsor.logoDark && (
              <img src={sponsor.logoDark} alt={sponsor.logoAlt} class="sponsor-logo logo-dark" />
            )}
          </a>
        </div>
      )}
    </div>
  </div>
</div>

<style>
  .activity-card {
    background: white;
    border-radius: var(--border-radius);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  :global([data-theme="dark"]) .activity-card {
    background: var(--card-bg);
    box-shadow: 0 4px 6px var(--shadow-color);
  }

  .activity-card:nth-child(2) .content {
    border-top-color: var(--yellow);
  }

  .activity-card:nth-child(3) .content {
    border-top-color: var(--blue);
  }

  .activity-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);
  }

  :global([data-theme="dark"]) .activity-card:hover {
    box-shadow: 0 8px 12px var(--shadow-color-hover);
  }

  .image-container {
    width: 100%;
    aspect-ratio: 16 / 9;
    overflow: hidden;
  }

  .image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
    display: block;
  }

  .activity-card:hover .image-container img {
    transform: scale(1.05);
  }

  .content {
    padding: var(--spacing-md);
    border-top: 4px solid var(--pink);
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  .text-content {
    margin-bottom: var(--spacing-lg);
  }

  h3 {
    color: var(--blue);
    margin-bottom: var(--spacing-sm);
    font-size: 1.5rem;
  }

  :global([data-theme="dark"]) h3 {
    color: #ffffff;
  }

  p {
    color: var(--text);
    margin: 0;
  }

  :global([data-theme="dark"]) p {
    color: #ffffff !important;
  }

  /* Actions wrapper */
  .actions-wrapper {
    margin-top: auto;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    align-items: center;
  }

  /* Button styles */
  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.5rem 1.5rem;
    border-radius: var(--border-radius);
    font-weight: 500;
    text-decoration: none;
    transition: transform 0.2s ease;
    width: fit-content;
    background-color: var(--pink);
    color: white;
  }

  .activity-card:nth-child(2) .button {
    background-color: var(--yellow);
  }

  .activity-card:nth-child(3) .button {
    background-color: var(--blue);
  }

  .button:hover {
    transform: translateY(-2px);
  }

  .button-secondary {
    background-color: transparent;
    border: 2px solid var(--pink);
    color: var(--pink);
  }

  .activity-card:nth-child(2) .button-secondary {
    border-color: var(--yellow);
    color: var(--yellow);
  }

  .activity-card:nth-child(3) .button-secondary {
    border-color: var(--blue);
    color: var(--blue);
  }

  /* Sponsor styles */
  .sponsor-wrapper {
    display: flex;
    justify-content: center;
  }

  .sponsor-logo-container {
    height: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.2s ease;
  }

  .sponsor-logo-container:hover {
    transform: translateY(-2px);
  }

  .sponsor-logo-container.large {
    height: 3.5rem;
  }

  .sponsor-logo {
    height: 100%;
    width: auto;
    object-fit: contain;
  }

  .logo-dark {
    display: none;
  }

  :global([data-theme="dark"]) .logo-light {
    display: none;
  }

  :global([data-theme="dark"]) .logo-dark {
    display: block;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .sponsor-logo-container {
      height: 2rem;
    }

    .sponsor-logo-container.large {
      height: 3rem;
    }
  }

  @media (max-width: 480px) {
    .sponsor-logo-container {
      height: 1.75rem;
    }

    .sponsor-logo-container.large {
      height: 2.5rem;
    }
  }
</style>